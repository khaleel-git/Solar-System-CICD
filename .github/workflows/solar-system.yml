name: Solar System Workflow

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
            
jobs:
    unit-testing:
        name: unit Testing
        strategy:
            matrix:
                nodejs_version: 
                    - 18
                    - 19
                    - 20
                operating_system: 
                    - ubuntu-latest
                exclude:
                    - nodejs_version: 18
        runs-on: ${{ matrix.operating_system }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            
            - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs_version }}
            
            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}
            - name: Install Dependencies
              run: npm install
            
            - name: Unit Testing
              id: nodejs-unit-testing-step
              run: npm test

            - name: Archive Test Result
              if: always() # always execute the step
              uses: actions/upload-artifact@v3
              with:
                name: Mocha-Test-Result
                path: test-results.xml 

    code-coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup NodeJS Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: 18

            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}

            - name: Install dependencies
              run: npm install

            - name: Check Code Coverage
              continue-on-error: true
              run: npm run coverage

            - name: Archive Test Result
              uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5

    docker:
        name: Containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
            - name: Dockerhub login
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }} 

            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Docker Build for Testing
              uses: docker/build-push-action@v4
              with:
                context: . # search for a dockerfile in a root dir
                push: false
                tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

            - name: Docker Image Test
              run: |
                docker images
                docker run --name solar-system-app -d \
                    -p 3000:3000 \
                    -e MONGO_URI=$MONGO_URI \
                    -e MONGO_USERNAME=$MONGO_USERNAME \
                    -e MONGO_PASSWORD=$MONGO_PASSWORD \
                    ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                echo $IP

                echo Testing Image URL using wget
                wget -q -O - 127.0.0.1:3000/live | grep live 
           
            - name: Docker Build for Testing
              uses: docker/build-push-action@v4
              with:
                context: . # search for a dockerfile in a root dir
                push: true
                tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
